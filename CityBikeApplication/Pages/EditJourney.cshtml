@page
@model CityBikeApplication.Pages.EditJourneyModel
@{
    ViewData["Title"] = "Edit Journey";
}

<h1>@ViewData["Title"]</h1>
<p></p>


@if (Model.ErrorMessages.Count > 0)
{
    foreach (string errorMessage in Model.ErrorMessages)
    {
        <div class="alert alert-warning" role="alert">
            <strong>@errorMessage</strong>
        </div>
    }
}

<form method="POST" >
    @{ 
        Model.GetOldJourney();
        string ddt = Model.OldJourney.DepartureTime.ToString("yyyy-MM-ddTHH:mm:ss").Replace(".",":");
        string rdt = Model.OldJourney.ReturnTime.ToString("yyyy-MM-ddTHH:mm:ss").Replace(".", ":");
    }
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Departure Time</label>
        <div class="col-sm-4">
            <input class="form-control" asp-for="@Model.OldJourney.DepartureTime" name="departureTime" value="@ddt" />
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Return Time</label>
        <div class="col-sm-4">
            <input class="form-control" asp-for="@Model.OldJourney.ReturnTime" name="returnTime" value="@rdt"/>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Departure Station</label>
        <select class="col-sm-4" name="departureStationId">
            <option value="-1" selected="selected">Select station</option>
            @{
                List<Station> stations = Model.GetChoices();
                foreach (Station station in stations)
                {
                    string optionName = station.Id + ": " + station.Name;
                    if (station.Id == Model.OldJourney.DepartureStationId)
                    {
                        <option value="@station.Id" selected="selected">@optionName</option>
                    }
                    else
                    {
                        <option value="@station.Id">@optionName</option>
                    }
                }
            }
        </select>
        <div>
            <button class="btn btn-primary btn-sm" type="submit" name="newdeparturestation" value="true" formnovalidate>Create New Station</button>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Return Station</label>
        <select class="col-sm-4" name="returnStationId">
            <option value="-1" selected="selected">Select station</option>
            @{
                foreach (Station station in stations)
                {
                    string optionName = station.Id + ": " + station.Name;
                    if (station.Id == Model.OldJourney.ReturnStationId)
                    {
                        <option value="@station.Id" selected="selected">@optionName</option>
                    }
                    else
                    {
                        <option value="@station.Id">@optionName</option>
                    }

                }
            }
        </select>
        <div>
            <button class="btn btn-primary btn-sm" type="submit" name="newreturnstation" value="true" formnovalidate>Create New Station</button>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Covered Distance (km)</label>
        <div class="col-sm-4">
            <input type="text" class="form-control" name="coveredDistance" value="@Model.OldJourney.CoveredDistance" />
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-2 col-form-label">Duration (min)</label>
        <div class="col-sm-4">
            <input type="text" class="form-control" name="duration" value="@Model.OldJourney.Duration" />
        </div>
    </div>

    <p></p>

    <div class="row mb-3">
        <div class="col-sm-2 d-grid">
            <button type="submit" class="btn btn-primary" formnovalidate>Submit</button>
        </div>
        <div class="col-sm-2 d-grid">
            <a class="btn btn-outline-primary" href="/JourneyList" role="button">Cancel</a>
        </div>
    </div>

</form>
